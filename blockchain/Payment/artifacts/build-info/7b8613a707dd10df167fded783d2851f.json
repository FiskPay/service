{
	"id": "7b8613a707dd10df167fded783d2851f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Payment/Implementors.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.18;\r\n\r\ninterface IParent{\r\n\r\n    function GetContractAddress(string calldata _name) external view returns(address);\r\n}\r\n\r\ncontract Implementors{\r\n\r\n//-----------------------------------------------------------------------// v EVENTS\r\n\r\n//-----------------------------------------------------------------------// v INTERFACES\r\n\r\n    IParent constant private pt = IParent(parentAddress);\r\n\r\n//-----------------------------------------------------------------------// v BOOLEANS\r\n\r\n//-----------------------------------------------------------------------// v ADDRESSES\r\n\r\n    address constant private parentAddress = 0xA00A1ED23A4cC11182db678a67FcdfB45fEe1FF8;\r\n\r\n//-----------------------------------------------------------------------// v NUMBERS\r\n\r\n//-----------------------------------------------------------------------// v BYTES\r\n\r\n//-----------------------------------------------------------------------// v STRINGS\r\n\r\n    string constant public Name = \".Payment.Implementors\";\r\n\r\n//-----------------------------------------------------------------------// v STRUCTS\r\n\r\n    struct Implementor{\r\n        uint32 epochSales;\r\n        uint32 epochEnd;\r\n        uint8 epochReward;\r\n    }\r\n\r\n//-----------------------------------------------------------------------// v ENUMS\r\n\r\n//-----------------------------------------------------------------------// v MAPPINGS\r\n\r\n    mapping(string => address) private nameToAddress;\r\n    mapping(address => string) private addressToName;\r\n    //\r\n    mapping(address => Implementor) private implementor;\r\n\r\n//-----------------------------------------------------------------------// v MODIFIERS\r\n\r\n//-----------------------------------------------------------------------// v CONSTRUCTOR\r\n\r\n//-----------------------------------------------------------------------// v PRIVATE FUNCTIONS\r\n\r\n//-----------------------------------------------------------------------// v GET FUNCTIONS\r\n\r\n    function GetImplementorProfile(address _implementor) public view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){\r\n\r\n        Implementor memory imp = implementor[_implementor];\r\n\r\n        epochSales = imp.epochSales;\r\n        epochEnd = imp.epochEnd;\r\n        epochReward = imp.epochReward;\r\n    }\r\n\r\n//-----------------------------------------------------------------------// v SET FUNTIONS\r\n\r\n    function GetEpochReward(address _implementor) public returns(uint8){\r\n\r\n        if(pt.GetContractAddress(\".Payment.Proccessor\") != msg.sender)\r\n            revert(\"Proccessor only\");\r\n\r\n        Implementor storage imp = implementor[_implementor];\r\n\r\n        if(imp.epochEnd < uint32(block.timestamp)){\r\n\r\n            uint32 epochSales = imp.epochSales;\r\n\r\n            if(epochSales > 24999)\r\n                imp.epochReward = 200;\r\n            else if(epochSales > 12499)\r\n                imp.epochReward = 150;\r\n            else if(epochSales > 7499)\r\n                imp.epochReward = 125;\r\n            else if(epochSales > 4999)\r\n                imp.epochReward = 100;\r\n            else if(epochSales > 2499)\r\n                imp.epochReward = 80;\r\n            else if(epochSales > 1499)\r\n                imp.epochReward = 60;\r\n            else if(epochSales > 999)\r\n                imp.epochReward = 50;\r\n            else if(epochSales > 499)\r\n                imp.epochReward = 40;\r\n            else if(epochSales > 249)\r\n                imp.epochReward = 35;\r\n            else\r\n                imp.epochReward = 30;\r\n\r\n            delete imp.epochSales;\r\n            imp.epochEnd = uint32(block.timestamp + 15 days);\r\n        }\r\n\r\n        imp.epochSales += 1;\r\n\r\n        return(imp.epochReward);\r\n    }\r\n    \r\n//-----------------------------------------------------------------------// v DEFAULTS\r\n\r\n    receive() external payable{\r\n\r\n        if(msg.value > 0)\r\n            payable(address(pt.GetContractAddress(\".Corporation.Vault\"))).call{value : msg.value}(\"\");\r\n        \r\n    }\r\n\r\n    fallback() external {}\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 20000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Payment/Implementors.sol": {
				"IParent": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "GetContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"GetContractAddress(string)": "c75ffd86"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"GetContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Payment/Implementors.sol\":\"IParent\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"Payment/Implementors.sol\":{\"keccak256\":\"0x17426f4657b90e59ce7151fbbb7db8902ff1e3e92c8a02d57dcfb36bdf408a90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12bfcf9feed14384a06660eb8612896c6c0872cc104f0acbebe4907a0b8195a3\",\"dweb:/ipfs/QmNQRg4iPCFLs9EQu3RQ6P5ypHe4VUpKVJmx1bJJaG2FKj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Implementors": {
					"abi": [
						{
							"stateMutability": "nonpayable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementor",
									"type": "address"
								}
							],
							"name": "GetEpochReward",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementor",
									"type": "address"
								}
							],
							"name": "GetImplementorProfile",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "epochSales",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "epochEnd",
									"type": "uint32"
								},
								{
									"internalType": "uint8",
									"name": "epochReward",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Payment/Implementors.sol\":176:4018  contract Implementors{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Payment/Implementors.sol\":176:4018  contract Implementors{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6452c22d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8052474d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x925849ad\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"Payment/Implementors.sol\":3850:3859  msg.value */\n      callvalue\n        /* \"Payment/Implementors.sol\":3850:3863  msg.value > 0 */\n      iszero\n        /* \"Payment/Implementors.sol\":3847:3967  if(msg.value > 0)... */\n      tag_8\n      jumpi\n        /* \"Payment/Implementors.sol\":3894:3937  pt.GetContractAddress(\".Corporation.Vault\") */\n      mload(0x40)\n      0xc75ffd8600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"Payment/Implementors.sol\":3894:3937  pt.GetContractAddress(\".Corporation.Vault\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x12\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n        /* \"#utility.yul\":294:314   */\n      0x2e436f72706f726174696f6e2e5661756c740000000000000000000000000000\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:315   */\n      mstore\n        /* \"Payment/Implementors.sol\":669:711  0xA00A1ED23A4cC11182db678a67FcdfB45fEe1FF8 */\n      0xa00a1ed23a4cc11182db678a67fcdfb45fee1ff8\n      swap1\n        /* \"Payment/Implementors.sol\":3894:3915  pt.GetContractAddress */\n      0xc75ffd86\n      swap1\n        /* \"#utility.yul\":332:350   */\n      0x64\n      add\n        /* \"Payment/Implementors.sol\":3894:3937  pt.GetContractAddress(\".Corporation.Vault\") */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_12\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_12:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"Payment/Implementors.sol\":3878:3944  payable(address(pt.GetContractAddress(\".Corporation.Vault\"))).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Payment/Implementors.sol\":3953:3962  msg.value */\n      callvalue\n        /* \"Payment/Implementors.sol\":3878:3967  payable(address(pt.GetContractAddress(\".Corporation.Vault\"))).call{value : msg.value}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_19\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_18)\n    tag_19:\n      0x60\n      swap2\n      pop\n    tag_18:\n      pop\n      pop\n      pop\n        /* \"Payment/Implementors.sol\":3847:3967  if(msg.value > 0)... */\n    tag_8:\n        /* \"Payment/Implementors.sol\":176:4018  contract Implementors{... */\n      stop\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"Payment/Implementors.sol\":2399:3706  function GetEpochReward(address _implementor) public returns(uint8){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1410:1414   */\n      0xff\n        /* \"#utility.yul\":1398:1415   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1380:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"Payment/Implementors.sol\":2399:3706  function GetEpochReward(address _implementor) public returns(uint8){... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Payment/Implementors.sol\":985:1038  string constant public Name = \".Payment.Implementors\" */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      0x2e5061796d656e742e496d706c656d656e746f72730000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n        /* \"Payment/Implementors.sol\":1985:2297  function GetImplementorProfile(address _implementor) public view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_37:\n        /* \"Payment/Implementors.sol\":2150:2175  implementor[_implementor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Payment/Implementors.sol\":2058:2075  uint32 epochSales */\n      0x00\n        /* \"Payment/Implementors.sol\":2150:2175  implementor[_implementor] */\n      swap1\n      dup2\n      mstore\n        /* \"Payment/Implementors.sol\":2150:2161  implementor */\n      0x02\n        /* \"Payment/Implementors.sol\":2150:2175  implementor[_implementor] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Payment/Implementors.sol\":2125:2175  Implementor memory imp = implementor[_implementor] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      swap1\n      sload\n      0xffffffff\n      dup1\n      dup3\n      and\n      dup1\n      dup5\n      mstore\n      0x0100000000\n      dup4\n      div\n      swap1\n      swap2\n      and\n      swap4\n      dup4\n      add\n      dup5\n      swap1\n      mstore\n      0x010000000000000000\n      swap1\n      swap2\n      div\n      0xff\n      and\n      swap2\n      swap1\n      swap4\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n        /* \"Payment/Implementors.sol\":1985:2297  function GetImplementorProfile(address _implementor) public view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){... */\n      jump\n    tag_36:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2243:2253   */\n      0xffffffff\n        /* \"#utility.yul\":2280:2295   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":2262:2296   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2332:2347   */\n      swap4\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":2327:2329   */\n      0x20\n        /* \"#utility.yul\":2312:2330   */\n      dup5\n      add\n        /* \"#utility.yul\":2305:2348   */\n      mstore\n        /* \"#utility.yul\":2396:2400   */\n      0xff\n        /* \"#utility.yul\":2384:2401   */\n      and\n        /* \"#utility.yul\":2364:2382   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2357:2402   */\n      mstore\n        /* \"#utility.yul\":2221:2223   */\n      0x60\n        /* \"#utility.yul\":2206:2224   */\n      add\n        /* \"Payment/Implementors.sol\":1985:2297  function GetImplementorProfile(address _implementor) public view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){... */\n      tag_28\n        /* \"#utility.yul\":2039:2408   */\n      jump\n        /* \"Payment/Implementors.sol\":2399:3706  function GetEpochReward(address _implementor) public returns(uint8){... */\n    tag_27:\n        /* \"Payment/Implementors.sol\":2482:2526  pt.GetContractAddress(\".Payment.Proccessor\") */\n      mload(0x40)\n      0xc75ffd8600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":2615:2617   */\n      0x20\n        /* \"Payment/Implementors.sol\":2482:2526  pt.GetContractAddress(\".Payment.Proccessor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2597:2618   */\n      mstore\n        /* \"#utility.yul\":2654:2656   */\n      0x13\n        /* \"#utility.yul\":2634:2652   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2627:2657   */\n      mstore\n        /* \"#utility.yul\":2693:2714   */\n      0x2e5061796d656e742e50726f63636573736f7200000000000000000000000000\n        /* \"#utility.yul\":2673:2691   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2666:2715   */\n      mstore\n        /* \"Payment/Implementors.sol\":2460:2465  uint8 */\n      0x00\n      swap1\n        /* \"Payment/Implementors.sol\":2530:2540  msg.sender */\n      caller\n      swap1\n        /* \"Payment/Implementors.sol\":669:711  0xA00A1ED23A4cC11182db678a67FcdfB45fEe1FF8 */\n      0xa00a1ed23a4cc11182db678a67fcdfb45fee1ff8\n      swap1\n        /* \"Payment/Implementors.sol\":2482:2503  pt.GetContractAddress */\n      0xc75ffd86\n      swap1\n        /* \"#utility.yul\":2732:2750   */\n      0x64\n      add\n        /* \"Payment/Implementors.sol\":2482:2526  pt.GetContractAddress(\".Payment.Proccessor\") */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_46:\n        /* \"Payment/Implementors.sol\":2482:2540  pt.GetContractAddress(\".Payment.Proccessor\") != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Payment/Implementors.sol\":2479:2580  if(pt.GetContractAddress(\".Payment.Proccessor\") != msg.sender)... */\n      tag_47\n      jumpi\n        /* \"Payment/Implementors.sol\":2555:2580  revert(\"Proccessor only\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":2963:2965   */\n      0x20\n        /* \"Payment/Implementors.sol\":2555:2580  revert(\"Proccessor only\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2945:2966   */\n      mstore\n        /* \"#utility.yul\":3002:3004   */\n      0x0f\n        /* \"#utility.yul\":2982:3000   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2975:3005   */\n      mstore\n        /* \"#utility.yul\":3041:3058   */\n      0x50726f63636573736f72206f6e6c790000000000000000000000000000000000\n        /* \"#utility.yul\":3021:3039   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3014:3059   */\n      mstore\n        /* \"#utility.yul\":3076:3094   */\n      0x64\n      add\n        /* \"Payment/Implementors.sol\":2555:2580  revert(\"Proccessor only\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Payment/Implementors.sol\":2479:2580  if(pt.GetContractAddress(\".Payment.Proccessor\") != msg.sender)... */\n    tag_47:\n        /* \"Payment/Implementors.sol\":2619:2644  implementor[_implementor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"Payment/Implementors.sol\":2593:2616  Implementor storage imp */\n      0x00\n        /* \"Payment/Implementors.sol\":2619:2644  implementor[_implementor] */\n      swap1\n      dup2\n      mstore\n        /* \"Payment/Implementors.sol\":2619:2630  implementor */\n      0x02\n        /* \"Payment/Implementors.sol\":2619:2644  implementor[_implementor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Payment/Implementors.sol\":2660:2672  imp.epochEnd */\n      dup1\n      sload\n        /* \"Payment/Implementors.sol\":2660:2698  imp.epochEnd < uint32(block.timestamp) */\n      0xffffffff\n        /* \"Payment/Implementors.sol\":2682:2697  block.timestamp */\n      timestamp\n        /* \"Payment/Implementors.sol\":2660:2698  imp.epochEnd < uint32(block.timestamp) */\n      dup2\n      and\n        /* \"Payment/Implementors.sol\":2660:2672  imp.epochEnd */\n      0x0100000000\n      swap1\n      swap3\n      div\n      and\n        /* \"Payment/Implementors.sol\":2660:2698  imp.epochEnd < uint32(block.timestamp) */\n      lt\n        /* \"Payment/Implementors.sol\":2657:3631  if(imp.epochEnd < uint32(block.timestamp)){... */\n      iszero\n      tag_50\n      jumpi\n        /* \"Payment/Implementors.sol\":2736:2750  imp.epochSales */\n      dup1\n      sload\n      0xffffffff\n      and\n        /* \"Payment/Implementors.sol\":2783:2788  24999 */\n      0x61a7\n        /* \"Payment/Implementors.sol\":2770:2788  epochSales > 24999 */\n      dup2\n      gt\n        /* \"Payment/Implementors.sol\":2767:3518  if(epochSales > 24999)... */\n      iszero\n      tag_51\n      jumpi\n        /* \"Payment/Implementors.sol\":2807:2828  imp.epochReward = 200 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0xc80000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":2767:3518  if(epochSales > 24999)... */\n      jump(tag_68)\n    tag_51:\n        /* \"Payment/Implementors.sol\":2864:2869  12499 */\n      0x30d3\n        /* \"Payment/Implementors.sol\":2851:2861  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":2851:2869  epochSales > 12499 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":2848:3518  if(epochSales > 12499)... */\n      iszero\n      tag_53\n      jumpi\n        /* \"Payment/Implementors.sol\":2888:2909  imp.epochReward = 150 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x960000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":2848:3518  if(epochSales > 12499)... */\n      jump(tag_68)\n    tag_53:\n        /* \"Payment/Implementors.sol\":2945:2949  7499 */\n      0x1d4b\n        /* \"Payment/Implementors.sol\":2932:2942  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":2932:2949  epochSales > 7499 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":2929:3518  if(epochSales > 7499)... */\n      iszero\n      tag_55\n      jumpi\n        /* \"Payment/Implementors.sol\":2968:2989  imp.epochReward = 125 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x7d0000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":2929:3518  if(epochSales > 7499)... */\n      jump(tag_68)\n    tag_55:\n        /* \"Payment/Implementors.sol\":3025:3029  4999 */\n      0x1387\n        /* \"Payment/Implementors.sol\":3012:3022  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":3012:3029  epochSales > 4999 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":3009:3518  if(epochSales > 4999)... */\n      iszero\n      tag_57\n      jumpi\n        /* \"Payment/Implementors.sol\":3048:3069  imp.epochReward = 100 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x640000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":3009:3518  if(epochSales > 4999)... */\n      jump(tag_68)\n    tag_57:\n        /* \"Payment/Implementors.sol\":3105:3109  2499 */\n      0x09c3\n        /* \"Payment/Implementors.sol\":3092:3102  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":3092:3109  epochSales > 2499 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":3089:3518  if(epochSales > 2499)... */\n      iszero\n      tag_59\n      jumpi\n        /* \"Payment/Implementors.sol\":3128:3148  imp.epochReward = 80 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x500000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":3089:3518  if(epochSales > 2499)... */\n      jump(tag_68)\n    tag_59:\n        /* \"Payment/Implementors.sol\":3184:3188  1499 */\n      0x05db\n        /* \"Payment/Implementors.sol\":3171:3181  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":3171:3188  epochSales > 1499 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":3168:3518  if(epochSales > 1499)... */\n      iszero\n      tag_61\n      jumpi\n        /* \"Payment/Implementors.sol\":3207:3227  imp.epochReward = 60 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x3c0000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":3168:3518  if(epochSales > 1499)... */\n      jump(tag_68)\n    tag_61:\n        /* \"Payment/Implementors.sol\":3263:3266  999 */\n      0x03e7\n        /* \"Payment/Implementors.sol\":3250:3260  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":3250:3266  epochSales > 999 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":3247:3518  if(epochSales > 999)... */\n      iszero\n      tag_63\n      jumpi\n        /* \"Payment/Implementors.sol\":3285:3305  imp.epochReward = 50 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x320000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":3247:3518  if(epochSales > 999)... */\n      jump(tag_68)\n    tag_63:\n        /* \"Payment/Implementors.sol\":3341:3344  499 */\n      0x01f3\n        /* \"Payment/Implementors.sol\":3328:3338  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":3328:3344  epochSales > 499 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":3325:3518  if(epochSales > 499)... */\n      iszero\n      tag_65\n      jumpi\n        /* \"Payment/Implementors.sol\":3363:3383  imp.epochReward = 40 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x280000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":3325:3518  if(epochSales > 499)... */\n      jump(tag_68)\n    tag_65:\n        /* \"Payment/Implementors.sol\":3419:3422  249 */\n      0xf9\n        /* \"Payment/Implementors.sol\":3406:3416  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":3406:3422  epochSales > 249 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":3403:3518  if(epochSales > 249)... */\n      iszero\n      tag_67\n      jumpi\n        /* \"Payment/Implementors.sol\":3441:3461  imp.epochReward = 35 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x230000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":3403:3518  if(epochSales > 249)... */\n      jump(tag_68)\n    tag_67:\n        /* \"Payment/Implementors.sol\":3498:3518  imp.epochReward = 30 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x1e0000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":3403:3518  if(epochSales > 249)... */\n    tag_68:\n        /* \"Payment/Implementors.sol\":3535:3556  delete imp.epochSales */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000\n      and\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":3593:3618  block.timestamp + 15 days */\n      tag_69\n        /* \"Payment/Implementors.sol\":3593:3608  block.timestamp */\n      timestamp\n        /* \"Payment/Implementors.sol\":3611:3618  15 days */\n      0x13c680\n        /* \"Payment/Implementors.sol\":3593:3618  block.timestamp + 15 days */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"Payment/Implementors.sol\":3571:3619  imp.epochEnd = uint32(block.timestamp + 15 days) */\n      dup3\n      sload\n      0xffffffff\n      swap2\n      swap1\n      swap2\n      and\n      0x0100000000\n      mul\n      0xffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      pop\n        /* \"Payment/Implementors.sol\":2657:3631  if(imp.epochEnd < uint32(block.timestamp)){... */\n    tag_50:\n        /* \"Payment/Implementors.sol\":3643:3662  imp.epochSales += 1 */\n      dup1\n      sload\n        /* \"Payment/Implementors.sol\":3661:3662  1 */\n      0x01\n      swap1\n        /* \"Payment/Implementors.sol\":3643:3646  imp */\n      dup3\n      swap1\n        /* \"Payment/Implementors.sol\":3643:3657  imp.epochSales */\n      0x00\n      swap1\n        /* \"Payment/Implementors.sol\":3643:3662  imp.epochSales += 1 */\n      tag_71\n      swap1\n        /* \"Payment/Implementors.sol\":3661:3662  1 */\n      dup5\n      swap1\n        /* \"Payment/Implementors.sol\":3643:3662  imp.epochSales += 1 */\n      0xffffffff\n      and\n      tag_72\n      jump\t// in\n    tag_71:\n      dup3\n      sload\n      0xffffffff\n      swap2\n      dup3\n      and\n      0x0100\n      swap4\n      swap1\n      swap4\n      exp\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap3\n      mul\n      not\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      pop\n        /* \"Payment/Implementors.sol\":3682:3697  imp.epochReward */\n      sload\n      0xff\n      0x010000000000000000\n      swap1\n      swap2\n      div\n      and\n      swap3\n        /* \"Payment/Implementors.sol\":2399:3706  function GetEpochReward(address _implementor) public returns(uint8){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":361:515   */\n    tag_74:\n        /* \"#utility.yul\":447:489   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":440:445   */\n      dup2\n        /* \"#utility.yul\":436:490   */\n      and\n        /* \"#utility.yul\":429:434   */\n      dup2\n        /* \"#utility.yul\":426:491   */\n      eq\n        /* \"#utility.yul\":416:509   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":505:506   */\n      0x00\n        /* \"#utility.yul\":502:503   */\n      dup1\n        /* \"#utility.yul\":495:507   */\n      revert\n        /* \"#utility.yul\":416:509   */\n    tag_79:\n        /* \"#utility.yul\":361:515   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":520:771   */\n    tag_14:\n        /* \"#utility.yul\":590:596   */\n      0x00\n        /* \"#utility.yul\":643:645   */\n      0x20\n        /* \"#utility.yul\":631:640   */\n      dup3\n        /* \"#utility.yul\":622:629   */\n      dup5\n        /* \"#utility.yul\":618:641   */\n      sub\n        /* \"#utility.yul\":614:646   */\n      slt\n        /* \"#utility.yul\":611:663   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":659:660   */\n      0x00\n        /* \"#utility.yul\":656:657   */\n      dup1\n        /* \"#utility.yul\":649:661   */\n      revert\n        /* \"#utility.yul\":611:663   */\n    tag_81:\n        /* \"#utility.yul\":691:700   */\n      dup2\n        /* \"#utility.yul\":685:701   */\n      mload\n        /* \"#utility.yul\":710:741   */\n      tag_82\n        /* \"#utility.yul\":735:740   */\n      dup2\n        /* \"#utility.yul\":710:741   */\n      tag_74\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":760:765   */\n      swap4\n        /* \"#utility.yul\":520:771   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":986:1233   */\n    tag_26:\n        /* \"#utility.yul\":1045:1051   */\n      0x00\n        /* \"#utility.yul\":1098:1100   */\n      0x20\n        /* \"#utility.yul\":1086:1095   */\n      dup3\n        /* \"#utility.yul\":1077:1084   */\n      dup5\n        /* \"#utility.yul\":1073:1096   */\n      sub\n        /* \"#utility.yul\":1069:1101   */\n      slt\n        /* \"#utility.yul\":1066:1118   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":1114:1115   */\n      0x00\n        /* \"#utility.yul\":1111:1112   */\n      dup1\n        /* \"#utility.yul\":1104:1116   */\n      revert\n        /* \"#utility.yul\":1066:1118   */\n    tag_85:\n        /* \"#utility.yul\":1153:1162   */\n      dup2\n        /* \"#utility.yul\":1140:1163   */\n      calldataload\n        /* \"#utility.yul\":1172:1203   */\n      tag_82\n        /* \"#utility.yul\":1197:1202   */\n      dup2\n        /* \"#utility.yul\":1172:1203   */\n      tag_74\n      jump\t// in\n        /* \"#utility.yul\":1427:2034   */\n    tag_34:\n        /* \"#utility.yul\":1539:1543   */\n      0x00\n        /* \"#utility.yul\":1568:1570   */\n      0x20\n        /* \"#utility.yul\":1597:1599   */\n      dup1\n        /* \"#utility.yul\":1586:1595   */\n      dup4\n        /* \"#utility.yul\":1579:1600   */\n      mstore\n        /* \"#utility.yul\":1629:1635   */\n      dup4\n        /* \"#utility.yul\":1623:1636   */\n      mload\n        /* \"#utility.yul\":1672:1678   */\n      dup1\n        /* \"#utility.yul\":1667:1669   */\n      dup3\n        /* \"#utility.yul\":1656:1665   */\n      dup6\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"#utility.yul\":1645:1679   */\n      mstore\n        /* \"#utility.yul\":1697:1698   */\n      0x00\n        /* \"#utility.yul\":1707:1847   */\n    tag_89:\n        /* \"#utility.yul\":1721:1727   */\n      dup2\n        /* \"#utility.yul\":1718:1719   */\n      dup2\n        /* \"#utility.yul\":1715:1728   */\n      lt\n        /* \"#utility.yul\":1707:1847   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":1816:1830   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1812:1835   */\n      dup4\n      add\n        /* \"#utility.yul\":1806:1836   */\n      mload\n        /* \"#utility.yul\":1782:1799   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1801:1803   */\n      0x40\n        /* \"#utility.yul\":1778:1804   */\n      add\n        /* \"#utility.yul\":1771:1837   */\n      mstore\n        /* \"#utility.yul\":1736:1746   */\n      dup3\n      add\n        /* \"#utility.yul\":1707:1847   */\n      jump(tag_89)\n    tag_91:\n        /* \"#utility.yul\":1711:1714   */\n      pop\n        /* \"#utility.yul\":1896:1897   */\n      0x00\n        /* \"#utility.yul\":1891:1893   */\n      0x40\n        /* \"#utility.yul\":1882:1888   */\n      dup3\n        /* \"#utility.yul\":1871:1880   */\n      dup7\n        /* \"#utility.yul\":1867:1889   */\n      add\n        /* \"#utility.yul\":1863:1894   */\n      add\n        /* \"#utility.yul\":1856:1898   */\n      mstore\n        /* \"#utility.yul\":2025:2027   */\n      0x40\n        /* \"#utility.yul\":1955:2021   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1950:1952   */\n      0x1f\n        /* \"#utility.yul\":1942:1948   */\n      dup4\n        /* \"#utility.yul\":1938:1953   */\n      add\n        /* \"#utility.yul\":1934:2022   */\n      and\n        /* \"#utility.yul\":1923:1932   */\n      dup6\n        /* \"#utility.yul\":1919:2023   */\n      add\n        /* \"#utility.yul\":1915:2028   */\n      add\n        /* \"#utility.yul\":1907:2028   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1427:2034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3105:3289   */\n    tag_75:\n        /* \"#utility.yul\":3157:3234   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3154:3155   */\n      0x00\n        /* \"#utility.yul\":3147:3235   */\n      mstore\n        /* \"#utility.yul\":3254:3258   */\n      0x11\n        /* \"#utility.yul\":3251:3252   */\n      0x04\n        /* \"#utility.yul\":3244:3259   */\n      mstore\n        /* \"#utility.yul\":3278:3282   */\n      0x24\n        /* \"#utility.yul\":3275:3276   */\n      0x00\n        /* \"#utility.yul\":3268:3283   */\n      revert\n        /* \"#utility.yul\":3294:3419   */\n    tag_70:\n        /* \"#utility.yul\":3359:3368   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3380:3390   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3377:3413   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3393:3411   */\n      tag_98\n      tag_75\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3294:3419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3424:3596   */\n    tag_72:\n        /* \"#utility.yul\":3491:3501   */\n      0xffffffff\n        /* \"#utility.yul\":3521:3531   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":3533:3543   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":3517:3544   */\n      add\n      swap1\n        /* \"#utility.yul\":3556:3567   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3553:3590   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":3570:3588   */\n      tag_101\n      tag_75\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3553:3590   */\n      pop\n        /* \"#utility.yul\":3424:3596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122038aa0061c847a86b1d33ad34c61f0275597b937cebb98a377e1cbfdee8ec4f8f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610901806100206000396000f3fe6080604052600436106100385760003560e01c80636452c22d1461016b5780638052474d146101a2578063925849ad146101f85761015f565b3661015f57341561015d576040517fc75ffd8600000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f2e436f72706f726174696f6e2e5661756c740000000000000000000000000000604482015273a00a1ed23a4cc11182db678a67fcdfb45fee1ff89063c75ffd8690606401602060405180830381865afa1580156100d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fd91906107b2565b73ffffffffffffffffffffffffffffffffffffffff163460405160006040518083038185875af1925050503d8060008114610154576040519150601f19603f3d011682016040523d82523d6000602084013e610159565b606091505b5050505b005b34801561015d57600080fd5b34801561017757600080fd5b5061018b6101863660046107d6565b6102a5565b60405160ff90911681526020015b60405180910390f35b3480156101ae57600080fd5b506101eb6040518060400160405280601581526020017f2e5061796d656e742e496d706c656d656e746f7273000000000000000000000081525081565b60405161019991906107f3565b34801561020457600080fd5b5061027f6102133660046107d6565b73ffffffffffffffffffffffffffffffffffffffff166000908152600260209081526040918290208251606081018452905463ffffffff80821680845264010000000083049091169383018490526801000000000000000090910460ff16919093018190529192909190565b6040805163ffffffff948516815293909216602084015260ff1690820152606001610199565b6040517fc75ffd8600000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f2e5061796d656e742e50726f63636573736f72000000000000000000000000006044820152600090339073a00a1ed23a4cc11182db678a67fcdfb45fee1ff89063c75ffd8690606401602060405180830381865afa158015610340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036491906107b2565b73ffffffffffffffffffffffffffffffffffffffff16146103e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f50726f63636573736f72206f6e6c790000000000000000000000000000000000604482015260640160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600260205260409020805463ffffffff42811664010000000090920416101561073b57805463ffffffff166161a781111561046c5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668c800000000000000001782556106cd565b6130d38163ffffffff1611156104b25781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16689600000000000000001782556106cd565b611d4b8163ffffffff1611156104f85781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16687d00000000000000001782556106cd565b6113878163ffffffff16111561053e5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16686400000000000000001782556106cd565b6109c38163ffffffff1611156105845781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16685000000000000000001782556106cd565b6105db8163ffffffff1611156105ca5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16683c00000000000000001782556106cd565b6103e78163ffffffff1611156106105781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16683200000000000000001782556106cd565b6101f38163ffffffff1611156106565781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16682800000000000000001782556106cd565b60f98163ffffffff16111561069b5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16682300000000000000001782556106cd565b81547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16681e00000000000000001782555b81547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000168255610700426213c68061088e565b825463ffffffff91909116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff909116178255505b8054600190829060009061075690849063ffffffff166108a7565b825463ffffffff9182166101009390930a9283029190920219909116179055505460ff680100000000000000009091041692915050565b73ffffffffffffffffffffffffffffffffffffffff811681146107af57600080fd5b50565b6000602082840312156107c457600080fd5b81516107cf8161078d565b9392505050565b6000602082840312156107e857600080fd5b81356107cf8161078d565b600060208083528351808285015260005b8181101561082057858101830151858201604001528201610804565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156108a1576108a161085f565b92915050565b63ffffffff8181168382160190808211156108c4576108c461085f565b509291505056fea264697066735822122038aa0061c847a86b1d33ad34c61f0275597b937cebb98a377e1cbfdee8ec4f8f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x901 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6452C22D EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x8052474D EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x925849AD EQ PUSH2 0x1F8 JUMPI PUSH2 0x15F JUMP JUMPDEST CALLDATASIZE PUSH2 0x15F JUMPI CALLVALUE ISZERO PUSH2 0x15D JUMPI PUSH1 0x40 MLOAD PUSH32 0xC75FFD8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E436F72706F726174696F6E2E5661756C740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xA00A1ED23A4CC11182DB678A67FCDFB45FEE1FF8 SWAP1 PUSH4 0xC75FFD86 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x159 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2E5061796D656E742E496D706C656D656E746F72730000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH5 0x100000000 DUP4 DIV SWAP1 SWAP2 AND SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xC75FFD8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E5061796D656E742E50726F63636573736F7200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH20 0xA00A1ED23A4CC11182DB678A67FCDFB45FEE1FF8 SWAP1 PUSH4 0xC75FFD86 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x340 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F63636573736F72206F6E6C790000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND PUSH5 0x100000000 SWAP1 SWAP3 DIV AND LT ISZERO PUSH2 0x73B JUMPI DUP1 SLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x61A7 DUP2 GT ISZERO PUSH2 0x46C JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0xC80000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x30D3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x4B2 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x960000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x1D4B DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x4F8 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x7D0000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x53E JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x640000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x584 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x500000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x5DB DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x5CA JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x3C0000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x3E7 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x610 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x320000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x656 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x280000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH1 0xF9 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x69B JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x230000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x1E0000000000000000 OR DUP3 SSTORE JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 AND DUP3 SSTORE PUSH2 0x700 TIMESTAMP PUSH3 0x13C680 PUSH2 0x88E JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF SWAP1 SWAP2 AND OR DUP3 SSTORE POP JUMPDEST DUP1 SLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x756 SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x8A7 JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP3 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP SLOAD PUSH1 0xFF PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7CF DUP2 PUSH2 0x78D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7CF DUP2 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x820 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x804 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8A1 JUMPI PUSH2 0x8A1 PUSH2 0x85F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x8C4 JUMPI PUSH2 0x8C4 PUSH2 0x85F JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xAA STOP PUSH2 0xC847 0xA8 PUSH12 0x1D33AD34C61F0275597B937C 0xEB 0xB9 DUP11 CALLDATACOPY PUSH31 0x1CBFDEE8EC4F8F64736F6C6343000812003300000000000000000000000000 ",
							"sourceMap": "176:3842:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@GetEpochReward_239": {
									"entryPoint": 677,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@GetImplementorProfile_75": {
									"entryPoint": null,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@Name_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_269": {
									"entryPoint": null,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66c4fceec4c65f06ed806ed94426f7ae7c2fe41b8f3c6095829e27b4712de9be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8c7a74aff8fe7d90068dc1cbbef22180fe23337a6c35193c3fdc4532d9ebb30d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db1436b45d4e788c5733c48dc298f55768bd05a8e2ba4785d588607e62aba86a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32_t_uint32_t_uint8__to_t_uint32_t_uint32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint32": {
									"entryPoint": 2215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3598:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"hexValue": "2e436f72706f726174696f6e2e5661756c74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:20:1",
																		"type": "",
																		"value": ".Corporation.Vault"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "324:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "336:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "347:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "332:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "332:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "324:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8c7a74aff8fe7d90068dc1cbbef22180fe23337a6c35193c3fdc4532d9ebb30d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:109:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "493:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "429:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "440:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "447:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "436:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "436:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "426:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "419:73:1"
															},
															"nodeType": "YulIf",
															"src": "416:93:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "395:5:1",
														"type": ""
													}
												],
												"src": "361:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "601:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "647:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "656:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "659:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "649:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "649:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "649:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "622:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "631:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "643:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:32:1"
															},
															"nodeType": "YulIf",
															"src": "611:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "672:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "691:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "685:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "676:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "735:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "710:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "710:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "750:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "760:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "567:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "578:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "590:6:1",
														"type": ""
													}
												],
												"src": "520:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:14:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "969:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "976:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "951:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "959:3:1",
														"type": ""
													}
												],
												"src": "776:205:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1056:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1102:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1111:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1114:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1104:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1104:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1104:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1077:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1086:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1073:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1073:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1098:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1069:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1069:32:1"
															},
															"nodeType": "YulIf",
															"src": "1066:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1127:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1153:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1140:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1131:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1197:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1172:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1172:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1222:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1022:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1033:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1045:6:1",
														"type": ""
													}
												],
												"src": "986:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1402:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1410:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:1",
														"type": ""
													}
												],
												"src": "1238:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1548:486:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1558:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1568:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1562:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1586:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1597:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1579:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1579:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1579:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1609:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1629:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1623:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1613:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1656:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1667:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1652:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1645:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1645:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1697:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1692:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1757:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1786:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1797:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1782:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1782:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1801:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1778:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1778:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1820:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1828:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1816:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1816:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1832:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1812:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1812:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1806:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1806:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1771:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1771:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1771:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1718:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1715:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1715:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1729:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1731:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1740:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1743:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1736:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1736:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1731:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1711:3:1",
																"statements": []
															},
															"src": "1707:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1871:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1882:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1867:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1867:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1891:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1863:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1863:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1896:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1856:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1856:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1907:121:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1923:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1942:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1950:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1938:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1938:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1955:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1934:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1934:88:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1919:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1919:104:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2025:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1915:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1915:113:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1907:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1517:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1528:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1539:4:1",
														"type": ""
													}
												],
												"src": "1427:607:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2188:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2198:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2210:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2221:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2206:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2198:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2233:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2243:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2237:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2269:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2292:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2280:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2262:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2316:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2327:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2312:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2312:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2336:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2344:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2332:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2305:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2305:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2368:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2379:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2364:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2364:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "2388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2396:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2384:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2384:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2357:45:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32_t_uint32_t_uint8__to_t_uint32_t_uint32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2141:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2152:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2160:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2168:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2179:4:1",
														"type": ""
													}
												],
												"src": "2039:369:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2587:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2604:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2615:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2597:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2649:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2654:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2627:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2627:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2677:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2688:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2673:18:1"
																	},
																	{
																		"hexValue": "2e5061796d656e742e50726f63636573736f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2693:21:1",
																		"type": "",
																		"value": ".Payment.Proccessor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2666:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2724:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2736:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2747:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2732:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2724:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66c4fceec4c65f06ed806ed94426f7ae7c2fe41b8f3c6095829e27b4712de9be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2564:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2578:4:1",
														"type": ""
													}
												],
												"src": "2413:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2935:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2952:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2963:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2945:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2986:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2997:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2982:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3002:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2975:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2975:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3025:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3036:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3021:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3021:18:1"
																	},
																	{
																		"hexValue": "50726f63636573736f72206f6e6c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3041:17:1",
																		"type": "",
																		"value": "Proccessor only"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3014:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3068:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3080:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3091:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3076:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3076:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3068:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db1436b45d4e788c5733c48dc298f55768bd05a8e2ba4785d588607e62aba86a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2912:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2926:4:1",
														"type": ""
													}
												],
												"src": "2761:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3137:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3154:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3157:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3147:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3147:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3251:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3254:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3244:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3244:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3275:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3278:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3268:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3268:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3268:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3105:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3342:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3352:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3363:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3366:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3359:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3359:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3352:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3391:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3393:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3393:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3393:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3383:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3386:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3380:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3380:10:1"
															},
															"nodeType": "YulIf",
															"src": "3377:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3325:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3328:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3334:3:1",
														"type": ""
													}
												],
												"src": "3294:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3471:125:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3481:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3491:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3485:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3510:34:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3525:1:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3528:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3521:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3521:10:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3537:1:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3540:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3533:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:10:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3517:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3517:27:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3568:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3570:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3570:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3570:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3559:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3564:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3556:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3556:11:1"
															},
															"nodeType": "YulIf",
															"src": "3553:37:1"
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3454:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3457:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3463:3:1",
														"type": ""
													}
												],
												"src": "3424:172:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_8c7a74aff8fe7d90068dc1cbbef22180fe23337a6c35193c3fdc4532d9ebb30d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \".Corporation.Vault\")\n        tail := add(headStart, 96)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_uint32_t_uint32_t_uint8__to_t_uint32_t_uint32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_66c4fceec4c65f06ed806ed94426f7ae7c2fe41b8f3c6095829e27b4712de9be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \".Payment.Proccessor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_db1436b45d4e788c5733c48dc298f55768bd05a8e2ba4785d588607e62aba86a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Proccessor only\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c80636452c22d1461016b5780638052474d146101a2578063925849ad146101f85761015f565b3661015f57341561015d576040517fc75ffd8600000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f2e436f72706f726174696f6e2e5661756c740000000000000000000000000000604482015273a00a1ed23a4cc11182db678a67fcdfb45fee1ff89063c75ffd8690606401602060405180830381865afa1580156100d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fd91906107b2565b73ffffffffffffffffffffffffffffffffffffffff163460405160006040518083038185875af1925050503d8060008114610154576040519150601f19603f3d011682016040523d82523d6000602084013e610159565b606091505b5050505b005b34801561015d57600080fd5b34801561017757600080fd5b5061018b6101863660046107d6565b6102a5565b60405160ff90911681526020015b60405180910390f35b3480156101ae57600080fd5b506101eb6040518060400160405280601581526020017f2e5061796d656e742e496d706c656d656e746f7273000000000000000000000081525081565b60405161019991906107f3565b34801561020457600080fd5b5061027f6102133660046107d6565b73ffffffffffffffffffffffffffffffffffffffff166000908152600260209081526040918290208251606081018452905463ffffffff80821680845264010000000083049091169383018490526801000000000000000090910460ff16919093018190529192909190565b6040805163ffffffff948516815293909216602084015260ff1690820152606001610199565b6040517fc75ffd8600000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f2e5061796d656e742e50726f63636573736f72000000000000000000000000006044820152600090339073a00a1ed23a4cc11182db678a67fcdfb45fee1ff89063c75ffd8690606401602060405180830381865afa158015610340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036491906107b2565b73ffffffffffffffffffffffffffffffffffffffff16146103e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f50726f63636573736f72206f6e6c790000000000000000000000000000000000604482015260640160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600260205260409020805463ffffffff42811664010000000090920416101561073b57805463ffffffff166161a781111561046c5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668c800000000000000001782556106cd565b6130d38163ffffffff1611156104b25781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16689600000000000000001782556106cd565b611d4b8163ffffffff1611156104f85781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16687d00000000000000001782556106cd565b6113878163ffffffff16111561053e5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16686400000000000000001782556106cd565b6109c38163ffffffff1611156105845781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16685000000000000000001782556106cd565b6105db8163ffffffff1611156105ca5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16683c00000000000000001782556106cd565b6103e78163ffffffff1611156106105781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16683200000000000000001782556106cd565b6101f38163ffffffff1611156106565781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16682800000000000000001782556106cd565b60f98163ffffffff16111561069b5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16682300000000000000001782556106cd565b81547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16681e00000000000000001782555b81547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000168255610700426213c68061088e565b825463ffffffff91909116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff909116178255505b8054600190829060009061075690849063ffffffff166108a7565b825463ffffffff9182166101009390930a9283029190920219909116179055505460ff680100000000000000009091041692915050565b73ffffffffffffffffffffffffffffffffffffffff811681146107af57600080fd5b50565b6000602082840312156107c457600080fd5b81516107cf8161078d565b9392505050565b6000602082840312156107e857600080fd5b81356107cf8161078d565b600060208083528351808285015260005b8181101561082057858101830151858201604001528201610804565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156108a1576108a161085f565b92915050565b63ffffffff8181168382160190808211156108c4576108c461085f565b509291505056fea264697066735822122038aa0061c847a86b1d33ad34c61f0275597b937cebb98a377e1cbfdee8ec4f8f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6452C22D EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x8052474D EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x925849AD EQ PUSH2 0x1F8 JUMPI PUSH2 0x15F JUMP JUMPDEST CALLDATASIZE PUSH2 0x15F JUMPI CALLVALUE ISZERO PUSH2 0x15D JUMPI PUSH1 0x40 MLOAD PUSH32 0xC75FFD8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E436F72706F726174696F6E2E5661756C740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xA00A1ED23A4CC11182DB678A67FCDFB45FEE1FF8 SWAP1 PUSH4 0xC75FFD86 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x159 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2E5061796D656E742E496D706C656D656E746F72730000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH5 0x100000000 DUP4 DIV SWAP1 SWAP2 AND SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xC75FFD8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E5061796D656E742E50726F63636573736F7200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH20 0xA00A1ED23A4CC11182DB678A67FCDFB45FEE1FF8 SWAP1 PUSH4 0xC75FFD86 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x340 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F63636573736F72206F6E6C790000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND PUSH5 0x100000000 SWAP1 SWAP3 DIV AND LT ISZERO PUSH2 0x73B JUMPI DUP1 SLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x61A7 DUP2 GT ISZERO PUSH2 0x46C JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0xC80000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x30D3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x4B2 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x960000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x1D4B DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x4F8 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x7D0000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x53E JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x640000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x584 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x500000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x5DB DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x5CA JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x3C0000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x3E7 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x610 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x320000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x656 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x280000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST PUSH1 0xF9 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x69B JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x230000000000000000 OR DUP3 SSTORE PUSH2 0x6CD JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x1E0000000000000000 OR DUP3 SSTORE JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 AND DUP3 SSTORE PUSH2 0x700 TIMESTAMP PUSH3 0x13C680 PUSH2 0x88E JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF SWAP1 SWAP2 AND OR DUP3 SSTORE POP JUMPDEST DUP1 SLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x756 SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x8A7 JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP3 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP SLOAD PUSH1 0xFF PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7CF DUP2 PUSH2 0x78D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7CF DUP2 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x820 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x804 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8A1 JUMPI PUSH2 0x8A1 PUSH2 0x85F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x8C4 JUMPI PUSH2 0x8C4 PUSH2 0x85F JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xAA STOP PUSH2 0xC847 0xA8 PUSH12 0x1D33AD34C61F0275597B937C 0xEB 0xB9 DUP11 CALLDATACOPY PUSH31 0x1CBFDEE8EC4F8F64736F6C6343000812003300000000000000000000000000 ",
							"sourceMap": "176:3842:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3850:9;:13;3847:120;;3894:43;;;;;216:2:1;3894:43:0;;;198:21:1;255:2;235:18;;;228:30;294:20;274:18;;;267:48;669:42:0;;3894:21;;332:18:1;;3894:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3878:66;;3953:9;3878:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3847:120;176:3842;;;;;;;;;;2399:1307;;;;;;;;;;-1:-1:-1;2399:1307:0;;;;;:::i;:::-;;:::i;:::-;;;1410:4:1;1398:17;;;1380:36;;1368:2;1353:18;2399:1307:0;;;;;;;;985:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1985:312::-;;;;;;;;;;-1:-1:-1;1985:312:0;;;;;:::i;:::-;2150:25;;2058:17;2150:25;;;:11;:25;;;;;;;;;2125:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:312;;;;;2243:10:1;2280:15;;;2262:34;;2332:15;;;;2327:2;2312:18;;2305:43;2396:4;2384:17;2364:18;;;2357:45;2221:2;2206:18;1985:312:0;2039:369:1;2399:1307:0;2482:44;;;;;2615:2:1;2482:44:0;;;2597:21:1;2654:2;2634:18;;;2627:30;2693:21;2673:18;;;2666:49;2460:5:0;;2530:10;;669:42;;2482:21;;2732:18:1;;2482:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;;;2479:101;;2555:25;;;;;2963:2:1;2555:25:0;;;2945:21:1;3002:2;2982:18;;;2975:30;3041:17;3021:18;;;3014:45;3076:18;;2555:25:0;;;;;;;2479:101;2619:25;;;2593:23;2619:25;;;:11;:25;;;;;2660:12;;:38;2682:15;2660:38;;:12;;;;;:38;2657:974;;;2736:14;;;;2783:5;2770:18;;2767:751;;;2807:21;;;;;;;;2767:751;;;2864:5;2851:10;:18;;;2848:670;;;2888:21;;;;;;;;2848:670;;;2945:4;2932:10;:17;;;2929:589;;;2968:21;;;;;;;;2929:589;;;3025:4;3012:10;:17;;;3009:509;;;3048:21;;;;;;;;3009:509;;;3105:4;3092:10;:17;;;3089:429;;;3128:20;;;;;;;;3089:429;;;3184:4;3171:10;:17;;;3168:350;;;3207:20;;;;;;;;3168:350;;;3263:3;3250:10;:16;;;3247:271;;;3285:20;;;;;;;;3247:271;;;3341:3;3328:10;:16;;;3325:193;;;3363:20;;;;;;;;3325:193;;;3419:3;3406:10;:16;;;3403:115;;;3441:20;;;;;;;;3403:115;;;3498:20;;;;;;;;3403:115;3535:21;;;;;;3593:25;:15;3611:7;3593:25;:::i;:::-;3571:48;;;;;;;;;;;;;;;;-1:-1:-1;2657:974:0;3643:19;;3661:1;;3643:3;;:14;;:19;;3661:1;;3643:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3682:15:0;;;;;;;;2399:1307;-1:-1:-1;;2399:1307:0:o;361:154:1:-;447:42;440:5;436:54;429:5;426:65;416:93;;505:1;502;495:12;416:93;361:154;:::o;520:251::-;590:6;643:2;631:9;622:7;618:23;614:32;611:52;;;659:1;656;649:12;611:52;691:9;685:16;710:31;735:5;710:31;:::i;:::-;760:5;520:251;-1:-1:-1;;;520:251:1:o;986:247::-;1045:6;1098:2;1086:9;1077:7;1073:23;1069:32;1066:52;;;1114:1;1111;1104:12;1066:52;1153:9;1140:23;1172:31;1197:5;1172:31;:::i;1427:607::-;1539:4;1568:2;1597;1586:9;1579:21;1629:6;1623:13;1672:6;1667:2;1656:9;1652:18;1645:34;1697:1;1707:140;1721:6;1718:1;1715:13;1707:140;;;1816:14;;;1812:23;;1806:30;1782:17;;;1801:2;1778:26;1771:66;1736:10;;1707:140;;;1711:3;1896:1;1891:2;1882:6;1871:9;1867:22;1863:31;1856:42;2025:2;1955:66;1950:2;1942:6;1938:15;1934:88;1923:9;1919:104;1915:113;1907:121;;;;1427:607;;;;:::o;3105:184::-;3157:77;3154:1;3147:88;3254:4;3251:1;3244:15;3278:4;3275:1;3268:15;3294:125;3359:9;;;3380:10;;;3377:36;;;3393:18;;:::i;:::-;3294:125;;;;:::o;3424:172::-;3491:10;3521;;;3533;;;3517:27;;3556:11;;;3553:37;;;3570:18;;:::i;:::-;3553:37;3424:172;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "461000",
								"executionCost": "499",
								"totalCost": "461499"
							},
							"external": {
								"": "156",
								"GetEpochReward(address)": "infinite",
								"GetImplementorProfile(address)": "2746",
								"Name()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 176,
									"end": 4018,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 4018,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038aa0061c847a86b1d33ad34c61f0275597b937cebb98a377e1cbfdee8ec4f8f64736f6c63430008120033",
									".code": [
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "6452C22D"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "8052474D"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "925849AD"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3859,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3847,
											"end": 3967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "C75FFD8600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 294,
											"end": 314,
											"name": "PUSH",
											"source": 1,
											"value": "2E436F72706F726174696F6E2E5661756C740000000000000000000000000000"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 267,
											"end": 315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 669,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "A00A1ED23A4CC11182DB678A67FCDFB45FEE1FF8"
										},
										{
											"begin": 669,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "C75FFD86"
										},
										{
											"begin": 3894,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 332,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 332,
											"end": 350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3894,
											"end": 3937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3894,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3967,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3847,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 4018,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2399,
											"end": 3706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2399,
											"end": 3706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1398,
											"end": 1415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "2E5061796D656E742E496D706C656D656E746F72730000000000000000000000"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 985,
											"end": 1038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1985,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 2253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2347,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2347,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2347,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2400,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2384,
											"end": 2401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2039,
											"end": 2408,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "C75FFD8600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2615,
											"end": 2617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2714,
											"name": "PUSH",
											"source": 1,
											"value": "2E5061796D656E742E50726F63636573736F7200000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "A00A1ED23A4CC11182DB678A67FCDFB45FEE1FF8"
										},
										{
											"begin": 669,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2503,
											"name": "PUSH",
											"source": 0,
											"value": "C75FFD86"
										},
										{
											"begin": 2482,
											"end": 2503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2482,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2479,
											"end": 2580,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 1,
											"value": "50726F63636573736F72206F6E6C790000000000000000000000000000000000"
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2580,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2479,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2682,
											"end": 2697,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 3631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2657,
											"end": 3631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "61A7"
										},
										{
											"begin": 2770,
											"end": 2788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2788,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "PUSH",
											"source": 0,
											"value": "C80000000000000000"
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "30D3"
										},
										{
											"begin": 2851,
											"end": 2861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "960000000000000000"
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2949,
											"name": "PUSH",
											"source": 0,
											"value": "1D4B"
										},
										{
											"begin": 2932,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2949,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2932,
											"end": 2949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2949,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "PUSH",
											"source": 0,
											"value": "7D0000000000000000"
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "1387"
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3012,
											"end": 3029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3029,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "640000000000000000"
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3105,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "9C3"
										},
										{
											"begin": 3092,
											"end": 3102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3092,
											"end": 3109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3109,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "500000000000000000"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3184,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "5DB"
										},
										{
											"begin": 3171,
											"end": 3181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3171,
											"end": 3188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3188,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "PUSH",
											"source": 0,
											"value": "3C0000000000000000"
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "3E7"
										},
										{
											"begin": 3250,
											"end": 3260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3250,
											"end": 3266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3266,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "PUSH",
											"source": 0,
											"value": "320000000000000000"
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "PUSH",
											"source": 0,
											"value": "1F3"
										},
										{
											"begin": 3328,
											"end": 3338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3328,
											"end": 3344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3344,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "280000000000000000"
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "F9"
										},
										{
											"begin": 3406,
											"end": 3416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "230000000000000000"
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "PUSH",
											"source": 0,
											"value": "1E0000000000000000"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000"
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3593,
											"end": 3608,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3618,
											"name": "PUSH",
											"source": 0,
											"value": "13C680"
										},
										{
											"begin": 3593,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3593,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3618,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3593,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF"
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2657,
											"end": 3631,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2657,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3643,
											"end": 3662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 3706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 361,
											"end": 515,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 361,
											"end": 515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 489,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 440,
											"end": 445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 436,
											"end": 490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 429,
											"end": 434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 491,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 416,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 416,
											"end": 509,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 505,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 495,
											"end": 507,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 416,
											"end": 509,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 416,
											"end": 509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 361,
											"end": 515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 520,
											"end": 771,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 520,
											"end": 771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 590,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 645,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 631,
											"end": 640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 622,
											"end": 629,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 641,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 614,
											"end": 646,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 611,
											"end": 663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 611,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 611,
											"end": 663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 659,
											"end": 660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 657,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 649,
											"end": 661,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 611,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 611,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 691,
											"end": 700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 701,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 735,
											"end": 740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 710,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 741,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 760,
											"end": 765,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 520,
											"end": 771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 520,
											"end": 771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1233,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 986,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1084,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1101,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1163,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1197,
											"end": 1202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1172,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2034,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1427,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1570,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1595,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1635,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1665,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1707,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1728,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1847,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1707,
											"end": 1847,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1830,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1799,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1707,
											"end": 1847,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1707,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1880,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1950,
											"end": 1952,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1942,
											"end": 1948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 2022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1932,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 2028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 2028,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 2028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 2028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 2028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2034,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3289,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3105,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3251,
											"end": 3252,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3275,
											"end": 3276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3283,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3419,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3294,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3390,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3393,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3419,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3596,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3424,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3521,
											"end": 3531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3567,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3590,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3553,
											"end": 3590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3570,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3596,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Payment/Implementors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"GetEpochReward(address)": "6452c22d",
							"GetImplementorProfile(address)": "925849ad",
							"Name()": "8052474d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementor\",\"type\":\"address\"}],\"name\":\"GetEpochReward\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementor\",\"type\":\"address\"}],\"name\":\"GetImplementorProfile\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"epochSales\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"epochEnd\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"epochReward\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Payment/Implementors.sol\":\"Implementors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"Payment/Implementors.sol\":{\"keccak256\":\"0x17426f4657b90e59ce7151fbbb7db8902ff1e3e92c8a02d57dcfb36bdf408a90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12bfcf9feed14384a06660eb8612896c6c0872cc104f0acbebe4907a0b8195a3\",\"dweb:/ipfs/QmNQRg4iPCFLs9EQu3RQ6P5ypHe4VUpKVJmx1bJJaG2FKj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 32,
								"contract": "Payment/Implementors.sol:Implementors",
								"label": "nameToAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_string_memory_ptr,t_address)"
							},
							{
								"astId": 36,
								"contract": "Payment/Implementors.sol:Implementors",
								"label": "addressToName",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_string_storage)"
							},
							{
								"astId": 41,
								"contract": "Payment/Implementors.sol:Implementors",
								"label": "implementor",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Implementor)28_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_address,t_struct(Implementor)28_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Implementors.Implementor)",
								"numberOfBytes": "32",
								"value": "t_struct(Implementor)28_storage"
							},
							"t_mapping(t_string_memory_ptr,t_address)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Implementor)28_storage": {
								"encoding": "inplace",
								"label": "struct Implementors.Implementor",
								"members": [
									{
										"astId": 23,
										"contract": "Payment/Implementors.sol:Implementors",
										"label": "epochSales",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 25,
										"contract": "Payment/Implementors.sol:Implementors",
										"label": "epochEnd",
										"offset": 4,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 27,
										"contract": "Payment/Implementors.sol:Implementors",
										"label": "epochReward",
										"offset": 8,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n   --> Payment/Implementors.sol:114:13:\n    |\n114 |             payable(address(pt.GetContractAddress(\".Corporation.Vault\"))).call{value : msg.value}(\"\");\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3967,
					"file": "Payment/Implementors.sol",
					"start": 3878
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Payment/Implementors.sol": {
				"ast": {
					"absolutePath": "Payment/Implementors.sol",
					"exportedSymbols": {
						"IParent": [
							9
						],
						"Implementors": [
							270
						]
					},
					"id": 271,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IParent",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "IParent",
							"nameLocation": "71:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c75ffd86",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "GetContractAddress",
									"nameLocation": "96:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "131:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "115:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:23:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "160:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "159:9:0"
									},
									"scope": 9,
									"src": "87:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 271,
							"src": "61:111:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Implementors",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 270,
							"linearizedBaseContracts": [
								270
							],
							"name": "Implementors",
							"nameLocation": "185:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 15,
									"mutability": "constant",
									"name": "pt",
									"nameLocation": "411:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "386:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IParent_$9",
										"typeString": "contract IParent"
									},
									"typeName": {
										"id": 11,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 10,
											"name": "IParent",
											"nameLocations": [
												"386:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 9,
											"src": "386:7:0"
										},
										"referencedDeclaration": 9,
										"src": "386:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IParent_$9",
											"typeString": "contract IParent"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 13,
												"name": "parentAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 18,
												"src": "424:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 12,
											"name": "IParent",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 9,
											"src": "416:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IParent_$9_$",
												"typeString": "type(contract IParent)"
											}
										},
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "416:22:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IParent_$9",
											"typeString": "contract IParent"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 18,
									"mutability": "constant",
									"name": "parentAddress",
									"nameLocation": "653:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "628:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841303041314544323341346343313131383264623637386136374663646642343566456531464638",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "669:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xA00A1ED23A4cC11182db678a67FcdfB45fEe1FF8"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "8052474d",
									"id": 21,
									"mutability": "constant",
									"name": "Name",
									"nameLocation": "1008:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "985:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 19,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "985:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2e5061796d656e742e496d706c656d656e746f7273",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1015:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0483997a1dcba6a34e4615fe19ccab5d148863c56bd2dc4b3ca05a5f11372e30",
											"typeString": "literal_string \".Payment.Implementors\""
										},
										"value": ".Payment.Implementors"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Implementors.Implementor",
									"id": 28,
									"members": [
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "epochSales",
											"nameLocation": "1172:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "1165:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 22,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1165:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "epochEnd",
											"nameLocation": "1200:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "1193:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 24,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1193:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "epochReward",
											"nameLocation": "1225:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "1219:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 26,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1219:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Implementor",
									"nameLocation": "1143:11:0",
									"nodeType": "StructDefinition",
									"scope": 270,
									"src": "1136:108:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "nameToAddress",
									"nameLocation": "1464:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "1429:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
										"typeString": "mapping(string => address)"
									},
									"typeName": {
										"id": 31,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 29,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1437:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "1429:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
											"typeString": "mapping(string => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1447:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "addressToName",
									"nameLocation": "1519:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "1484:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
										"typeString": "mapping(address => string)"
									},
									"typeName": {
										"id": 35,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 33,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1492:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1484:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
											"typeString": "mapping(address => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 34,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1503:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "implementor",
									"nameLocation": "1587:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "1547:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
										"typeString": "mapping(address => struct Implementors.Implementor)"
									},
									"typeName": {
										"id": 40,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1555:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1547:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
											"typeString": "mapping(address => struct Implementors.Implementor)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 39,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 38,
												"name": "Implementor",
												"nameLocations": [
													"1566:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "1566:11:0"
											},
											"referencedDeclaration": 28,
											"src": "1566:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
												"typeString": "struct Implementors.Implementor"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "2112:185:0",
										"statements": [
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "imp",
														"nameLocation": "2144:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 74,
														"src": "2125:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
															"typeString": "struct Implementors.Implementor"
														},
														"typeName": {
															"id": 53,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 52,
																"name": "Implementor",
																"nameLocations": [
																	"2125:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 28,
																"src": "2125:11:0"
															},
															"referencedDeclaration": 28,
															"src": "2125:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": {
													"baseExpression": {
														"id": 55,
														"name": "implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "2150:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
															"typeString": "mapping(address => struct Implementors.Implementor storage ref)"
														}
													},
													"id": 57,
													"indexExpression": {
														"id": 56,
														"name": "_implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "2162:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2150:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Implementor_$28_storage",
														"typeString": "struct Implementors.Implementor storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2125:50:0"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 59,
														"name": "epochSales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "2188:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 60,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2201:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
																"typeString": "struct Implementors.Implementor memory"
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2205:10:0",
														"memberName": "epochSales",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "2201:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2188:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "2188:27:0"
											},
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 64,
														"name": "epochEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2226:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 65,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2237:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
																"typeString": "struct Implementors.Implementor memory"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2241:8:0",
														"memberName": "epochEnd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "2237:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2226:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "2226:23:0"
											},
											{
												"expression": {
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 69,
														"name": "epochReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2260:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 70,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2274:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
																"typeString": "struct Implementors.Implementor memory"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2278:11:0",
														"memberName": "epochReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "2274:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2260:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "2260:29:0"
											}
										]
									},
									"functionSelector": "925849ad",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetImplementorProfile",
									"nameLocation": "1994:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "_implementor",
												"nameLocation": "2024:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2016:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:22:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "epochSales",
												"nameLocation": "2065:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2058:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 45,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2058:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "epochEnd",
												"nameLocation": "2084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2077:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 47,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2077:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "epochReward",
												"nameLocation": "2100:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2094:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 49,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2094:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2057:55:0"
									},
									"scope": 270,
									"src": "1985:312:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2466:1240:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "2e5061796d656e742e50726f63636573736f72",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2504:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_66c4fceec4c65f06ed806ed94426f7ae7c2fe41b8f3c6095829e27b4712de9be",
																	"typeString": "literal_string \".Payment.Proccessor\""
																},
																"value": ".Payment.Proccessor"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_66c4fceec4c65f06ed806ed94426f7ae7c2fe41b8f3c6095829e27b4712de9be",
																	"typeString": "literal_string \".Payment.Proccessor\""
																}
															],
															"expression": {
																"id": 82,
																"name": "pt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "2482:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IParent_$9",
																	"typeString": "contract IParent"
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2485:18:0",
															"memberName": "GetContractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 8,
															"src": "2482:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
																"typeString": "function (string memory) view external returns (address)"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2482:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 86,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2530:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2534:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2530:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2482:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 93,
												"nodeType": "IfStatement",
												"src": "2479:101:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "50726f63636573736f72206f6e6c79",
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2562:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_db1436b45d4e788c5733c48dc298f55768bd05a8e2ba4785d588607e62aba86a",
																	"typeString": "literal_string \"Proccessor only\""
																},
																"value": "Proccessor only"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_db1436b45d4e788c5733c48dc298f55768bd05a8e2ba4785d588607e62aba86a",
																	"typeString": "literal_string \"Proccessor only\""
																}
															],
															"id": 89,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "2555:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2555:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 92,
													"nodeType": "ExpressionStatement",
													"src": "2555:25:0"
												}
											},
											{
												"assignments": [
													96
												],
												"declarations": [
													{
														"constant": false,
														"id": 96,
														"mutability": "mutable",
														"name": "imp",
														"nameLocation": "2613:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "2593:23:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
															"typeString": "struct Implementors.Implementor"
														},
														"typeName": {
															"id": 95,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 94,
																"name": "Implementor",
																"nameLocations": [
																	"2593:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 28,
																"src": "2593:11:0"
															},
															"referencedDeclaration": 28,
															"src": "2593:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"baseExpression": {
														"id": 97,
														"name": "implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "2619:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
															"typeString": "mapping(address => struct Implementors.Implementor storage ref)"
														}
													},
													"id": 99,
													"indexExpression": {
														"id": 98,
														"name": "_implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2631:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2619:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Implementor_$28_storage",
														"typeString": "struct Implementors.Implementor storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2593:51:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 101,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "2660:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor storage pointer"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2664:8:0",
														"memberName": "epochEnd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "2660:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 105,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2682:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2688:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2682:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 103,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "2675:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2675:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2660:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 227,
												"nodeType": "IfStatement",
												"src": "2657:974:0",
												"trueBody": {
													"id": 226,
													"nodeType": "Block",
													"src": "2699:932:0",
													"statements": [
														{
															"assignments": [
																110
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 110,
																	"mutability": "mutable",
																	"name": "epochSales",
																	"nameLocation": "2723:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 226,
																	"src": "2716:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 109,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2716:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 113,
															"initialValue": {
																"expression": {
																	"id": 111,
																	"name": "imp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2736:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																		"typeString": "struct Implementors.Implementor storage pointer"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2740:10:0",
																"memberName": "epochSales",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 23,
																"src": "2736:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2716:34:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 114,
																	"name": "epochSales",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "2770:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "3234393939",
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2783:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_24999_by_1",
																		"typeString": "int_const 24999"
																	},
																	"value": "24999"
																},
																"src": "2770:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 123,
																		"name": "epochSales",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 110,
																		"src": "2851:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "3132343939",
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2864:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_12499_by_1",
																			"typeString": "int_const 12499"
																		},
																		"value": "12499"
																	},
																	"src": "2851:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 132,
																			"name": "epochSales",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "2932:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "37343939",
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2945:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_7499_by_1",
																				"typeString": "int_const 7499"
																			},
																			"value": "7499"
																		},
																		"src": "2932:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 141,
																				"name": "epochSales",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "3012:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "34393939",
																				"id": 142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3025:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4999_by_1",
																					"typeString": "int_const 4999"
																				},
																				"value": "4999"
																			},
																			"src": "3012:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 150,
																					"name": "epochSales",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 110,
																					"src": "3092:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "32343939",
																					"id": 151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3105:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2499_by_1",
																						"typeString": "int_const 2499"
																					},
																					"value": "2499"
																				},
																				"src": "3092:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 159,
																						"name": "epochSales",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 110,
																						"src": "3171:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">",
																					"rightExpression": {
																						"hexValue": "31343939",
																						"id": 160,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3184:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1499_by_1",
																							"typeString": "int_const 1499"
																						},
																						"value": "1499"
																					},
																					"src": "3171:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 170,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 168,
																							"name": "epochSales",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 110,
																							"src": "3250:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "393939",
																							"id": 169,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3263:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_999_by_1",
																								"typeString": "int_const 999"
																							},
																							"value": "999"
																						},
																						"src": "3250:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							},
																							"id": 179,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 177,
																								"name": "epochSales",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 110,
																								"src": "3328:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"hexValue": "343939",
																								"id": 178,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3341:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_499_by_1",
																									"typeString": "int_const 499"
																								},
																								"value": "499"
																							},
																							"src": "3328:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseBody": {
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								},
																								"id": 188,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 186,
																									"name": "epochSales",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 110,
																									"src": "3406:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint32",
																										"typeString": "uint32"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">",
																								"rightExpression": {
																									"hexValue": "323439",
																									"id": 187,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3419:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_249_by_1",
																										"typeString": "int_const 249"
																									},
																									"value": "249"
																								},
																								"src": "3406:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"falseBody": {
																								"expression": {
																									"id": 199,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"id": 195,
																											"name": "imp",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 96,
																											"src": "3498:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																												"typeString": "struct Implementors.Implementor storage pointer"
																											}
																										},
																										"id": 197,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberLocation": "3502:11:0",
																										"memberName": "epochReward",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 27,
																										"src": "3498:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "3330",
																										"id": 198,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3516:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_30_by_1",
																											"typeString": "int_const 30"
																										},
																										"value": "30"
																									},
																									"src": "3498:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"id": 200,
																								"nodeType": "ExpressionStatement",
																								"src": "3498:20:0"
																							},
																							"id": 201,
																							"nodeType": "IfStatement",
																							"src": "3403:115:0",
																							"trueBody": {
																								"expression": {
																									"id": 193,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"id": 189,
																											"name": "imp",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 96,
																											"src": "3441:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																												"typeString": "struct Implementors.Implementor storage pointer"
																											}
																										},
																										"id": 191,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberLocation": "3445:11:0",
																										"memberName": "epochReward",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 27,
																										"src": "3441:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "3335",
																										"id": 192,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3459:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_35_by_1",
																											"typeString": "int_const 35"
																										},
																										"value": "35"
																									},
																									"src": "3441:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"id": 194,
																								"nodeType": "ExpressionStatement",
																								"src": "3441:20:0"
																							}
																						},
																						"id": 202,
																						"nodeType": "IfStatement",
																						"src": "3325:193:0",
																						"trueBody": {
																							"expression": {
																								"id": 184,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"expression": {
																										"id": 180,
																										"name": "imp",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 96,
																										"src": "3363:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																											"typeString": "struct Implementors.Implementor storage pointer"
																										}
																									},
																									"id": 182,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"memberLocation": "3367:11:0",
																									"memberName": "epochReward",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 27,
																									"src": "3363:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"hexValue": "3430",
																									"id": 183,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3381:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_40_by_1",
																										"typeString": "int_const 40"
																									},
																									"value": "40"
																								},
																								"src": "3363:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"id": 185,
																							"nodeType": "ExpressionStatement",
																							"src": "3363:20:0"
																						}
																					},
																					"id": 203,
																					"nodeType": "IfStatement",
																					"src": "3247:271:0",
																					"trueBody": {
																						"expression": {
																							"id": 175,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"expression": {
																									"id": 171,
																									"name": "imp",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 96,
																									"src": "3285:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																										"typeString": "struct Implementors.Implementor storage pointer"
																									}
																								},
																								"id": 173,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"memberLocation": "3289:11:0",
																								"memberName": "epochReward",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 27,
																								"src": "3285:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"hexValue": "3530",
																								"id": 174,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3303:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_50_by_1",
																									"typeString": "int_const 50"
																								},
																								"value": "50"
																							},
																							"src": "3285:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"id": 176,
																						"nodeType": "ExpressionStatement",
																						"src": "3285:20:0"
																					}
																				},
																				"id": 204,
																				"nodeType": "IfStatement",
																				"src": "3168:350:0",
																				"trueBody": {
																					"expression": {
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 162,
																								"name": "imp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 96,
																								"src": "3207:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																									"typeString": "struct Implementors.Implementor storage pointer"
																								}
																							},
																							"id": 164,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "3211:11:0",
																							"memberName": "epochReward",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 27,
																							"src": "3207:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "3630",
																							"id": 165,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3225:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_60_by_1",
																								"typeString": "int_const 60"
																							},
																							"value": "60"
																						},
																						"src": "3207:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"id": 167,
																					"nodeType": "ExpressionStatement",
																					"src": "3207:20:0"
																				}
																			},
																			"id": 205,
																			"nodeType": "IfStatement",
																			"src": "3089:429:0",
																			"trueBody": {
																				"expression": {
																					"id": 157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 153,
																							"name": "imp",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "3128:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																								"typeString": "struct Implementors.Implementor storage pointer"
																							}
																						},
																						"id": 155,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "3132:11:0",
																						"memberName": "epochReward",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 27,
																						"src": "3128:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "3830",
																						"id": 156,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3146:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_80_by_1",
																							"typeString": "int_const 80"
																						},
																						"value": "80"
																					},
																					"src": "3128:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"id": 158,
																				"nodeType": "ExpressionStatement",
																				"src": "3128:20:0"
																			}
																		},
																		"id": 206,
																		"nodeType": "IfStatement",
																		"src": "3009:509:0",
																		"trueBody": {
																			"expression": {
																				"id": 148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 144,
																						"name": "imp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 96,
																						"src": "3048:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																							"typeString": "struct Implementors.Implementor storage pointer"
																						}
																					},
																					"id": 146,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "3052:11:0",
																					"memberName": "epochReward",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "3048:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "313030",
																					"id": 147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3066:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "3048:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"id": 149,
																			"nodeType": "ExpressionStatement",
																			"src": "3048:21:0"
																		}
																	},
																	"id": 207,
																	"nodeType": "IfStatement",
																	"src": "2929:589:0",
																	"trueBody": {
																		"expression": {
																			"id": 139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 135,
																					"name": "imp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 96,
																					"src": "2968:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																						"typeString": "struct Implementors.Implementor storage pointer"
																					}
																				},
																				"id": 137,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2972:11:0",
																				"memberName": "epochReward",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 27,
																				"src": "2968:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "313235",
																				"id": 138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2986:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_125_by_1",
																					"typeString": "int_const 125"
																				},
																				"value": "125"
																			},
																			"src": "2968:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 140,
																		"nodeType": "ExpressionStatement",
																		"src": "2968:21:0"
																	}
																},
																"id": 208,
																"nodeType": "IfStatement",
																"src": "2848:670:0",
																"trueBody": {
																	"expression": {
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 126,
																				"name": "imp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "2888:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																					"typeString": "struct Implementors.Implementor storage pointer"
																				}
																			},
																			"id": 128,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "2892:11:0",
																			"memberName": "epochReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 27,
																			"src": "2888:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "313530",
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2906:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_150_by_1",
																				"typeString": "int_const 150"
																			},
																			"value": "150"
																		},
																		"src": "2888:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 131,
																	"nodeType": "ExpressionStatement",
																	"src": "2888:21:0"
																}
															},
															"id": 209,
															"nodeType": "IfStatement",
															"src": "2767:751:0",
															"trueBody": {
																"expression": {
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 117,
																			"name": "imp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "2807:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																				"typeString": "struct Implementors.Implementor storage pointer"
																			}
																		},
																		"id": 119,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "2811:11:0",
																		"memberName": "epochReward",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "2807:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "323030",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2825:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	"src": "2807:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 122,
																"nodeType": "ExpressionStatement",
																"src": "2807:21:0"
															}
														},
														{
															"expression": {
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3535:21:0",
																"subExpression": {
																	"expression": {
																		"id": 210,
																		"name": "imp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3542:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																			"typeString": "struct Implementors.Implementor storage pointer"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3546:10:0",
																	"memberName": "epochSales",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 23,
																	"src": "3542:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 213,
															"nodeType": "ExpressionStatement",
															"src": "3535:21:0"
														},
														{
															"expression": {
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 214,
																		"name": "imp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3571:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																			"typeString": "struct Implementors.Implementor storage pointer"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3575:8:0",
																	"memberName": "epochEnd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 25,
																	"src": "3571:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 219,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3593:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3599:9:0",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3593:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "3135",
																				"id": 221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3611:7:0",
																				"subdenomination": "days",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1296000_by_1",
																					"typeString": "int_const 1296000"
																				},
																				"value": "15"
																			},
																			"src": "3593:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3586:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 217,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "3586:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3586:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "3571:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 225,
															"nodeType": "ExpressionStatement",
															"src": "3571:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 228,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "3643:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor storage pointer"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3647:10:0",
														"memberName": "epochSales",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "3643:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3661:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3643:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "3643:19:0"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 234,
																"name": "imp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3682:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																	"typeString": "struct Implementors.Implementor storage pointer"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3686:11:0",
															"memberName": "epochReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "3682:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 236,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3681:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 81,
												"id": 237,
												"nodeType": "Return",
												"src": "3675:23:0"
											}
										]
									},
									"functionSelector": "6452c22d",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetEpochReward",
									"nameLocation": "2408:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "_implementor",
												"nameLocation": "2431:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2423:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2460:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 79,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2460:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:7:0"
									},
									"scope": 270,
									"src": "2399:1307:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "3834:151:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 242,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3850:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3854:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3850:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3862:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3850:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 263,
												"nodeType": "IfStatement",
												"src": "3847:120:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "",
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3964:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "2e436f72706f726174696f6e2e5661756c74",
																							"id": 252,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3916:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8c7a74aff8fe7d90068dc1cbbef22180fe23337a6c35193c3fdc4532d9ebb30d",
																								"typeString": "literal_string \".Corporation.Vault\""
																							},
																							"value": ".Corporation.Vault"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8c7a74aff8fe7d90068dc1cbbef22180fe23337a6c35193c3fdc4532d9ebb30d",
																								"typeString": "literal_string \".Corporation.Vault\""
																							}
																						],
																						"expression": {
																							"id": 250,
																							"name": "pt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 15,
																							"src": "3894:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IParent_$9",
																								"typeString": "contract IParent"
																							}
																						},
																						"id": 251,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3897:18:0",
																						"memberName": "GetContractAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 8,
																						"src": "3894:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
																							"typeString": "function (string memory) view external returns (address)"
																						}
																					},
																					"id": 253,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3894:43:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3886:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 248,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3886:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3886:52:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3878:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_payable_$",
																			"typeString": "type(address payable)"
																		},
																		"typeName": {
																			"id": 246,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3878:8:0",
																			"stateMutability": "payable",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3878:61:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3940:4:0",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "3878:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"expression": {
																		"id": 257,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3953:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3957:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3953:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "3878:85:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3878:89:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"id": 262,
													"nodeType": "ExpressionStatement",
													"src": "3878:89:0"
												}
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3815:2:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3834:0:0"
									},
									"scope": 270,
									"src": "3808:177:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "4013:2:0",
										"statements": []
									},
									"id": 269,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4001:2:0"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4013:0:0"
									},
									"scope": 270,
									"src": "3993:22:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 271,
							"src": "176:3842:0",
							"usedErrors": []
						}
					],
					"src": "34:3984:0"
				},
				"id": 0
			}
		}
	}
}